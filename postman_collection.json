{
	"info": {
		"_postman_id": "xxxxxxxxxxxxx",
		"name": "xxxx-Jenkins",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SuperAdmin",
			"item": [
				{
					"name": "login-logout-with-preset-credential",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-preset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67a78b86-b2af-488f-b843-cf2fa13af9c6",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/logout-preset",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6a56357-6782-4d26-9d1c-17eb1a20f12a",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body('{\"message\":\"good\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]"
								},
								"url": {
									"raw": "{{api_home_url}}/api/logout",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "login-with-wrong-credential",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-wrong-credential",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e655c973-558e-40be-b4e4-59959e171cc9",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body('{\"error\":{}}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{wrong_superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-edit-delete-normal-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40c49b33-ff53-4a95-95f9-ec0bb80d0efc",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a5dc00eb-a2b2-4a43-aeef-3530fefd12eb",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5978ab6f-c085-40f3-a61c-bf37316bc960",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "552d9616-3a10-4470-8c7c-1b4c7c6003d7",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74fcde49-c375-4eee-8ab5-a1ed5f47aaa5",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbba1c47-2e23-4d0e-ae11-a02e17e1bc56",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4383381d-6661-4b73-9628-fde0e267e190",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-name-status-admin",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dac30b9f-775e-4a58-8684-7c32e1a66bc3",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f7772dd-0cb8-44e4-8698-f19ec383ff74",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "044c159a-12ba-4132-b6d9-b4947a4d7af0",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7555a92f-ca7f-410f-8ba8-7cc8b3d45bab",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3742cd4d-5a1a-4e82-b26e-085a6825a36b",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b280e68-06f6-4fd4-9a58-ed3a3d152311",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60678c70-01bd-40ba-af0a-9557beecb871",
										"exec": [
											"pm.environment.set(\"company_name_prefix\", \"changecompanyname\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "089a8b71-ecf6-44ff-86a1-3996d42328b7",
										"exec": [
											"",
											"pm.test(\"Verify updated info\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_uuid = \"\";",
											"    const target_company_uuid = pm.environment.get(\"company_uuid\");",
											"    console.log(target_company_uuid);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"test3@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_uuid = jsonArr[i][\"uuid\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_uuid == target_company_uuid)",
											"        {",
											"            assert(!jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\"));",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7846794d-47bd-4f74-a4c2-dc01d2c61209",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-illegal-email",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8d73da3-06c8-45b3-9259-3a287998a0ce",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e08dcb8-22ef-4420-a302-57d84c28e26f",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "97c84bef-2e9b-4eb0-8926-b237576aa8c0",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bf8db94d-772b-4486-86b4-f6c47a947a9b",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aa9343a5-1c0c-455a-9859-5e0bdda475f4",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c33e5eee-2907-4c35-a634-c6a24c81bbae",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != 'Success', \"Should not accept illegal email as admin\")",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e292a438-3e66-4987-8195-54765a4625ba",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name}}\",\n        \"description\": \" \",\n        \"active\": true,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx\",\n            \"test3@xxxx\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-no-email",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26f73e42-e439-4d4c-b9f3-29a6e0f2b39e",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9583b571-2ca2-47a6-96af-70bc98828e7f",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "48468266-451a-483f-8d1e-013f24492aba",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b3863a49-50a9-4063-aee9-97445fb79952",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78dd655a-0fdf-453c-91ed-3ae5d510c696",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4616873e-1458-4477-b1c3-caae73772b13",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "635cf83d-a485-4cfa-ad2a-a95b9da13350",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name}}\",\n        \"description\": \" \",\n        \"active\": true,\n        \"logo\": \" \",\n        \"administrators\": [],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6323e4de-ef43-4d99-9a47-ae75297fd1b1",
										"exec": [
											"",
											"pm.test(\"Verify updated info\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_uuid = \"\";",
											"    const target_company_uuid = pm.environment.get(\"company_uuid\");",
											"    console.log(target_company_uuid);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_uuid = jsonArr[i][\"uuid\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_uuid == target_company_uuid)",
											"        {",
											"            //assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //assert(jsonArr[i][\"name\"] == pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\"), \"Wrong company_name\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f18bbad-2fb8-4f87-a8c5-7552d09c80c2",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-duplicate-email",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aa5ba460-325b-4bd5-9b39-27a1b5d9001c",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d6360d8-3a46-49b9-985b-937b28867e29",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a27169bc-75a6-4b55-b264-b413faa38869",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0ad1f0a2-4674-40a5-acf6-78475a333e0b",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "112a776d-126c-464b-9c57-c6ebfb87f747",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3060c786-672c-4ded-998c-a83250d14db4",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body('{\"error\":{\"message\":\"zarafaAdminPrivilege: value #0 provided more than once Code: 0x14\"}}');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3e795026-3a0b-4534-ad5a-4de00ecaa11d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name}}\",\n        \"description\": \" \",\n        \"active\": true,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test3@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70357f89-4885-4195-9e03-07500dd560b5",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-special-name",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8b1f70a-c8b2-4ed3-9b9b-993c753e4e38",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d5de59c-2b2c-4ce4-ad8a-985c8f81f2e6",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4c35ca98-5d15-4e1c-a262-ce8c7c0abae5",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90736a10-c25c-44bf-a847-fdecb7e546c6",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7932477-15fa-44c5-a9dc-d7570a288119",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca14051a-6968-45f6-9fcf-f1448a264404",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f90c275f-c29d-459e-9ffc-3bd491477d30",
										"exec": [
											"pm.environment.set(\"company_name_prefix\", \"AAnother test-company001.name@xxxx.ai101\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"description\": \" \",\n        \"active\": true,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d11fe1d-f57e-4b42-a3db-d5fb889b5475",
										"exec": [
											"",
											"pm.test(\"Verify updated info\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_uuid = \"\";",
											"    const target_company_uuid = pm.environment.get(\"company_uuid\");",
											"    console.log(target_company_uuid);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    //to_create_admin = [\"test1@xxxx.ai\", \"test3@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_uuid = jsonArr[i][\"uuid\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_uuid == target_company_uuid)",
											"        {",
											"            //assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            //assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\"), \"Wrong company_name\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a909a787-90bd-48e7-b4cc-30046fa290b8",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "edit-company-name",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "107a884a-d98a-49c4-bdf2-e682aa855991",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66c6f8f1-bbdc-4773-bbbc-adc87a7cabd6",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "81dd57e9-611e-45de-9547-471bb4008c5d",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b1a7435a-ea61-4b7b-b304-32c3e76ab63e",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ca068d7-3bd9-4f18-af28-34803ab8bd14",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    to_create_admin = [\"test1@xxxx.ai\", \"info@xxxx.ai\", \"test2@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57a4e970-7700-4bfb-ae63-758a6a9b5365",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "176eeb1c-6bd2-4c34-8e94-b95d03d448ef",
										"exec": [
											"pm.environment.set(\"company_name_prefix\", \"change_company_name\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"description\": \" \",\n        \"active\": true,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bbc1dc19-48d8-439d-9a17-9eed1dbde2f0",
										"exec": [
											"",
											"pm.test(\"Verify updated info\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_uuid = \"\";",
											"    const target_company_uuid = pm.environment.get(\"company_uuid\");",
											"    console.log(target_company_uuid);",
											"    var found = false;",
											"    var assert = require(\"assert\");",
											"    //to_create_admin = [\"test1@xxxx.ai\", \"test3@xxxx.ai\"];",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_uuid = jsonArr[i][\"uuid\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_uuid == target_company_uuid)",
											"        {",
											"            //assert(jsonArr[i][\"active\"], \"Created with wrong status\");",
											"            //assert(jsonArr[i][\"administrators\"].sort().toString() == to_create_admin.sort().toString(), \"Created with wrong admin info\");",
											"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\"), \"Wrong company_name\");",
											"            //console.log(jsonArr[i][\"active\"]);",
											"            //console.log(jsonArr[i][\"administrators\"]);",
											"            found = true;",
											"        }",
											"    };",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "293772a1-ff56-42fc-ad90-324899a8ba17",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-blank-email-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79d71180-fbe9-40ea-beb2-a314862fd599",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81a8313a-f6d2-4c21-8cfa-bb68a1b41d05",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "19bac649-b880-4344-bba6-69af2ffe4fd8",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b36ee052-4349-4fa0-9b62-e3f2095e0001",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt == '{\"error\":{\"message\":\"no values for attribute type Code: 0x2\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": []\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-illegal-email-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3edecb5b-0cb1-4a44-b4c4-74e3bcc93e69",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f4b47fc6-111e-4e57-99cc-8ae5a4aee009",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2253a61d-820e-4c7a-949b-3a969c482b1b",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c1a6db1e-26c0-4c26-be5f-c6b19b87b2a2",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != 'Success', \"Should not create company with illegal email\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test@xxxx\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-duplicate-email-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d90b7d2-ca54-401f-9882-e2288f06b6c4",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ad6ec84-7d60-4eb1-bfad-7ade5e4e86e4",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57cd8247-acf5-4a2c-8aec-8f86aa507294",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "29fc4ef9-8181-4975-a6d2-683000569323",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt == '{\"error\":{\"message\":\"zarafaAdminPrivilege: value #1 provided more than once Code: 0x14\"}}', \"Duplicate email\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-special-name-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d7da745-d823-45c4-b96a-bcf517c009b2",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d2b9716-f71e-4f18-bcd0-812ac33f8093",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8dc1817a-2c50-4265-bc68-c561962b5845",
										"exec": [
											"var d = new Date();",
											"var n = d.getTime();",
											"pm.environment.set(\"company_name\", n);",
											"pm.environment.set(\"company_name_prefix\", \"AAnother test-company001.name@xxxx.ai101\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a234622e-d986-4305-987a-3ff78b118d9f",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list-after-create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ca0b35f-16b7-439b-ba44-a449c2989791",
										"exec": [
											"",
											"pm.test(\"Find UUID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var i_company_name = \"\";",
											"    const target_company_name = pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\");",
											"    console.log(target_company_name);",
											"    var found = false;",
											"    for(var i = 0, len = jsonArr.length; i < len; i++){",
											"        i_company_name = jsonArr[i][\"name\"];",
											"        //console.log(i_company_name);",
											"",
											"        if (i_company_name == target_company_name)",
											"        {",
											"            uuid = jsonArr[i][\"uuid\"];",
											"            console.log(uuid);",
											"            pm.environment.set(\"company_uuid\", uuid);",
											"            uid = jsonArr[i][\"uid\"];",
											"            console.log(uid);",
											"            pm.environment.set(\"company_uid\", uid);",
											"            found = true;",
											"        }",
											"    };",
											"    var assert = require(\"assert\");",
											"    assert(found, \"Cannot  find created company: \" + pm.environment.get(\"company_name_prefix\") + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76e888cf-9ab8-475b-b617-5ac692d21d3d",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"name\": \"{{company_name_prefix}}{{company_name}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"logo\": \" \",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d14943bb-7052-455c-bd7e-e9be3a41a6d3",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{company_uuid}}\",\n        \"name\": \"{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create-illegal-name-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "378fa00a-93c9-46ea-8372-b7492128e3c9",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    console.log(pm.response.text());",
											"    pm.response.to.have.body('{\"username\":\"superadmin\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "acdb9e0d-c695-4b7b-baa9-634ec0cdb038",
										"exec": [
											"",
											"pm.test(\"Find Company\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonArr = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonArr.length > 0, \"Cannot find any Company\");",
											"    console.log(\"Find \" + jsonArr.length + \" Companies\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4c6284ae-b3d4-48a0-a4c3-1f0c703b46a9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{superadmin_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-create",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c66617a8-46b1-4b64-9cef-68dc91266243",
										"exec": [
											"pm.environment.set(\"company_name\", \"AAnother)))101\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f32f1699-793a-4610-984c-9b1520ef2130",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != 'Success', 'Should not create company ' + pm.environment.get(\"company_name\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"name\": \"{{company_name}}\",\n        \"description\": \"\",\n        \"active\": true,\n        \"logo\": \"\",\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"test2@xxxx.ai\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete-illegal-company",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/company-delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b371c1a-a0b9-49a0-a297-daa05aaa72f2",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
											"    restxt = pm.response.text()",
											"    var assert = require(\"assert\");",
											"    assert(restxt != '{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}', restxt)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{superadmin_credential}}\",\n    \"companyInfo\": {\n        \"uuid\": \"{{illegal_company_uuid}}\",\n        \"name\": \"{{company_name}}\",\n        \"uid\": \"{{company_uid}}\",\n        \"description\": \" \",\n        \"active\": false,\n        \"administrators\": [\n            \"test1@xxxx.ai\",\n            \"test3@xxxx.ai\"\n        ],\n        \"logo\": \" \",\n        \"creation\": \"1598314460057\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/company",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"company"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CompanyAdmin",
			"item": [
				{
					"name": "SiteManage",
					"item": [
						{
							"name": "get-geo-info",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "105f44f7-34bf-4bc3-bdfa-29f46f5faf39",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-list-edit-delete",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fcf21330-ec2c-474e-acc9-ff526cb921c3",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c0f3d05d-fd51-41c9-b6e2-e56c6f4c7f9a",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-old-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "19ac7ab2-16c0-408a-af6f-b71d26bd68a7",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "20ec11cd-653c-4ffa-b4b4-15696df04f2e",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "97ed3ce9-0ccb-48cb-900f-308452dca800",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "348322f5-6f23-417d-bdd2-7c6d16cdf856",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1650cf5c-2ded-4441-8f34-c1a076092f3e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-new-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bcecb0cf-2b50-4fe9-995e-0f2e38f9e87f",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"3500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4f96e98b-6fda-440e-8330-da7643ab9afb",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "07349901-7658-418b-9f6e-a55c0bf72f3f",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"3500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"GTA\",\n            \"Pilot\"\n        ],\n        \"creation\": 1597685204526\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3999cf5f-b808-406e-8fc4-451f92be70b6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f35ece0e-9253-4927-8f90-ac60dc31dfd6",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_uuid = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_uuid = pm.environment.get(\"site_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_uuid == target_site_uuid)",
													"        {",
													"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"site_name\"));",
													"            assert(jsonArr[i][\"address\"] == \"3500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"GTA\", \"Pilot\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b8053b9-0a7f-4f71-a8f0-17d524613a69",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "edit-coordinate",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "60e3628a-6d7c-4511-af7e-b881746e8287",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "15763a41-bcf1-43da-8151-8672c66e054d",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-old-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42ef4bd7-c12f-4180-af74-6ba5d4aefdb5",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ed196e09-bff0-4201-8e02-a01268beefdc",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "524f8ad7-8951-47a5-87ad-7fac03a5343c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "834e7a3a-a98c-4a4d-b155-0fb60b922677",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e1fb297d-ac7e-4638-af89-8ffe70dbbd15",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b58884f3-059e-4e51-8879-4b759ae09b84",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b32796cd-730b-48c1-8769-5c670168fed5",
												"exec": [
													"pm.environment.set(\"latitude\", \"45\");",
													"pm.environment.set(\"longitude\", \"32\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"GTA\",\n            \"Pilot\"\n        ],\n        \"creation\": 1597685204526\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "dc6e89b5-b9f1-4796-b9be-b5a38fac729f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "412a31fd-c0ca-48a1-a9e5-1c70c8b6554c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_uuid = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_uuid = pm.environment.get(\"site_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_uuid == target_site_uuid)",
													"        {",
													"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"site_name\"));",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match: \" + jsonArr[i][\"address\"]);",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"GTA\", \"Pilot\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d366c45-c8c6-43d7-b735-d1ab2ba37f51",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "edit-illegal-coordinate",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "07f4f713-72ca-43d6-be60-23c5f73c4195",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "63a2cfd3-ed1b-4ae1-b709-2b2c764305f2",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-old-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "752a21de-e011-4b81-a975-48c4d3d51ce4",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "609f5747-cbc4-4d43-babe-d0e4aa6e89d0",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "53010f85-0c77-4e7a-829a-b31398517845",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5f2e41f8-19ee-4736-9b6c-8c0636c25530",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cb44e23-d34c-4ba2-9dbe-36c728e524a7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a6fcaca-b0e0-4119-8072-a0feccbd8d9f",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    var assert = require(\"assert\");",
													"    assert(pm.response.text() != \"Success\", \"Should not accept illegal coordinate\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "20e77631-ec31-49c5-9799-a116ed114d64",
												"exec": [
													"pm.environment.set(\"latitude\", \"545\");",
													"pm.environment.set(\"longitude\", \"532\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"GTA\",\n            \"Pilot\"\n        ],\n        \"creation\": 1597685204526\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e9b2f3b1-ff08-4225-b590-226b72403a67",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a64de032-a2d3-452b-992b-6b5b12d88259",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_uuid = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_uuid = pm.environment.get(\"site_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_uuid == target_site_uuid)",
													"        {",
													"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"site_name\"));",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"GTA\", \"Pilot\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e51fb83-11ca-492d-95da-19e53102bca9",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "edit-special-name",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "979733fc-ba9b-436d-b690-bd64bdb315d0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0cfd466c-2eed-4954-810d-6841de0876c9",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-old-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "12dda179-37d7-482c-ae7c-f4ef8cfe06c4",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "04ba14fd-e5c0-46a4-b9c8-3cb067975e1f",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "40189a03-8dd7-4e9c-a849-2cfba615bec6",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7272d8bd-a2db-477a-a570-8b82dcaecb77",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "be5095a2-0c1e-456b-a1b0-6391b74c01b7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-new-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa009d83-5751-4e68-ba12-c119cf963847",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"3500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d7f56389-eb0a-4f75-8d3e-1ec11ba2a863",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2663ff5e-5709-44d3-91c7-607a60514a51",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", \"AAnother test-company001.name@xxxx.ai101\" + n);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"3500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"GTA\",\n            \"Pilot\"\n        ],\n        \"creation\": 1597685204526\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "294510ce-75fe-4364-877d-fff3903a026c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dfd981e9-782f-437e-99b1-01dbf1d710af",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_uuid = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_uuid = pm.environment.get(\"site_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_uuid == target_site_uuid)",
													"        {",
													"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"site_name\"));",
													"            assert(jsonArr[i][\"address\"] == \"3500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"GTA\", \"Pilot\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ad896a3-573b-4723-875c-fda7051c223b",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "edit-illegal-name",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ee1b4a21-e710-4a25-80a2-b21ff23aabe7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0bc04b68-fcf4-4f0e-993f-dc937d662204",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-old-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bc54a8e2-9269-4790-a7d2-47437461fcfe",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f273d630-f820-4ee8-97ef-ae64578c9acc",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b2511cd8-86ea-4369-b40a-7f1419676ddd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "581a3464-8277-4f9f-88e5-226addfd80fd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bd934e24-0b25-4275-9bb0-cf4dc9adb0bf",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info-new-address",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bd1e8424-0325-4490-a71f-6370dc7da916",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"3500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c844443b-b1ec-419e-b112-6e9ccdb2e792",
												"exec": [
													"",
													"pm.test(\"Body is correct\", function () {",
													"    //pm.response.to.have.body('{\"error\":{\"message\":\"subordinate objects must be deleted first Code: 0x42\"}}');",
													"    restxt = pm.response.text()",
													"    var assert = require(\"assert\");",
													"    assert(restxt != 'Success', \"Should not accept illegal name\")",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e6bd0e96-7003-4a08-867e-3371df92c6c0",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", \"AAnother)))((($$$###))) test-company001.name@xxxx.ai101\" + n);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"3500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"GTA\",\n            \"Pilot\"\n        ],\n        \"creation\": 1597685204526\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a002f56-6894-4a71-9a96-e8100e12c26f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dc09503c-5c19-4d26-9285-da1ec5ec56bc",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_uuid = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_uuid = pm.environment.get(\"site_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_uuid == target_site_uuid)",
													"        {",
													"            assert(jsonArr[i][\"name\"] == pm.environment.get(\"site_name\"));",
													"            assert(jsonArr[i][\"address\"] == \"3500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"GTA\", \"Pilot\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbefe532-cd9a-4911-9710-2cd166cca4c7",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-illegal-coordinate",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "89e3abce-a40f-45e3-a626-54baa51fac6c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "0ffc4229-32e2-456f-9048-ae0bf2709dd4",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e56670b6-61d0-4d59-a84c-8f3c2ae7c8af",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", \"300\");",
													"    pm.environment.set(\"longitude\", \"300\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e9104243-3710-44c9-ab38-c5d6a762932b",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5cd9e953-bb7c-4b1b-9ed5-d2d0c1755a8d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body('{\"code\":\"postalCode: value #0 provided more than once Code: 0x14\"}');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{latitude}}\",\n        \"latitude\": \"{{longitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-special-name",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9071874c-d7b0-4154-8a6b-d3a8ce142d6e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3add4caa-967d-4f8b-8aba-91f8a0216b35",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6684e14a-6fc5-4f7f-b942-bf96321c19ec",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] != \"\" & jsonData[\"longitude\"] != \"\", \"Cannot find geo info\");",
													"    console.log(jsonData[\"latitude\"]);",
													"    console.log(jsonData[\"longitude\"]);",
													"    pm.environment.set(\"latitude\", jsonData[\"latitude\"]);",
													"    pm.environment.set(\"longitude\", jsonData[\"longitude\"]);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"2500 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "68e38831-388e-4916-97d6-03b9f2627421",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", \"AAnother test-company001.name@xxxx.ai101\" + n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b3c8ea46-58a4-4f46-b050-a27552661510",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ae59d7bf-825b-4ee9-b227-0d050a958ce5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4c3f21a3-1903-4de9-a219-c3a48b4fc8d9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"2500 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString())",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "226ae3c9-84a5-4b8d-8f35-0deb4ca39d24",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-illegal-address-modified-coordinates",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e098a1bf-67d0-4619-8893-116ab460aa5b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ac9020b6-a07a-4048-b54f-8fd38896f2dc",
												"exec": [
													"pm.test(\"Find sites\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find sites\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-get-geo-info",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc8eefac-273b-4b7d-a7f9-43ce9a86ba6f",
												"exec": [
													"",
													"pm.test(\"Find geo info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsonData[\"latitude\"] == \"\" & jsonData[\"longitude\"] == \"\", \"Should not find geo info\");",
													"    pm.environment.set(\"latitude\", \"45\");",
													"    pm.environment.set(\"longitude\", \"32\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"get-geo-info\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": \"250000000000 Sheppard Avenue East, Toronto\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5c138ecc-8c40-4e4c-ad3d-221d3cb4d6b4",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"site_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "eef30718-8487-4a8b-978b-074c6a833352",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"siteInfo\": {\n        \"name\": \"{{site_name}}\",\n        \"address\": \"250000000000 Sheppard Avenue East, Toronto\",\n        \"longitude\": \"{{longitude}}\",\n        \"latitude\": \"{{latitude}}\",\n        \"labels\": [\n            \"Toronto\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "debd73ec-ca46-4390-b38c-9ad3dd03777b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dc9cf794-0956-4704-bd38-fd9ab17c769e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID and verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_site_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_site_name = pm.environment.get(\"site_name\");",
													"    console.log(target_site_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_site_name = jsonArr[i][\"name\"];",
													"        //console.log(i_site_name);",
													"",
													"        if (i_site_name == target_site_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"site_uuid\", uuid);",
													"            assert(jsonArr[i][\"address\"] == \"250000000000 Sheppard Avenue East, Toronto\", \"Address doesn't match\");",
													"            assert(jsonArr[i][\"labels\"].sort().toString() == [\"Toronto\"].sort().toString());",
													"            assert(jsonArr[i][\"latitude\"] == pm.environment.get(\"latitude\"));",
													"            assert(jsonArr[i][\"longitude\"] == pm.environment.get(\"longitude\"));",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created site\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/site-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e720214b-b077-4823-a74c-cd2176681bfd",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"username\": \"demo\",\n    \"siteInfo\": {\n        \"uuid\": \"{{site_uuid}}\",\n        \"name\": \"{{site_name}}\",\n        \"address\": \"2500 Sheppard Avenue East, Toronto\",\n        \"hours\": \"{\\\"Monday\\\":\\\"8 AM to 8 PM\\\",\\\"Tuesday\\\":\\\"8 AM to 8 PM\\\",\\\"Wednesday\\\":\\\"8 AM to 8 PM\\\",\\\"Thursday\\\":\\\"8 AM to 8 PM\\\",\\\"Friday\\\":\\\"8 AM to 8 PM\\\"}\",\n        \"labels\": [\n            \"Toronto\"\n        ],\n        \"longitude\": \"-79.3236908\",\n        \"latitude\": \"45.7754147\",\n        \"creation\": 1597685204526,\n        \"users\": []\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/site",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"site"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "RoleManage",
					"item": [
						{
							"name": "create-edit-list-delete",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "99c75df0-8c56-49f1-841c-623f2a6f5d6e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ea8f6a6a-35e6-4289-a9d0-999e29f6e326",
												"exec": [
													"pm.test(\"Find roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find roles\")",
													"});",
													"",
													"",
													"pm.test(\"Verify preset roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = 0;",
													"    const assert = require(\"assert\");",
													"    console.log(jsonArr.length);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == \"Site Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Company Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"site-manage\", \"role-manage\", \"user-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Site Operator\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"event-review\", \"event-process\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Application User\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"dashboard-view\", \"report-view\", \"event-review\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"    };",
													"    assert(found == 4, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"action\":\"list\",\"credential\":\"{{demo_credential}}\",\"company\":\"Tridel\"}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "af90abe8-2dd4-46f1-af5f-95c951d0c225",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"role_name\", n);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2c8bfc22-7839-48ae-977b-89c3a4667b4d",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": false,\n        \"services\": [\n            \"alert-manage\",\n            \"role-manage\",\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list-after-create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "51ccc2e8-2274-4b4e-b084-70db7687bc9f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = false;",
													"    const assert = require(\"assert\");",
													"    const target_role_name = pm.environment.get(\"role_name\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == target_role_name)",
													"        {",
													"            uuid = jsonArr[i][\"uuid\"];",
													"            console.log(uuid);",
													"            pm.environment.set(\"role_uuid\", uuid);",
													"            assert(!jsonArr[i][\"preset\"], \"It's not preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"role-manage\", \"report-view\"].sort().toString());",
													"            assert(jsonArr[i][\"users\"].sort().toString() == [\"eve@xxxx.ai\", \"max@xxxx.ai\"].sort().toString());",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d212afc4-cbda-4f93-a5c3-571f421e0dac",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8b021e95-d328-47d4-a066-1c81be85f68c",
												"exec": [
													"var d = new Date();",
													"var n = d.getTime();",
													"pm.environment.set(\"role_name\", n);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": false,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list-after-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b9ccac3-c3dd-4e33-82bf-d1c06603d550",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Find UUID & verify info\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_uuid = \"\";",
													"    var found = false;",
													"    const assert = require(\"assert\");",
													"    const target_role_uuid = pm.environment.get(\"role_uuid\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_uuid = jsonArr[i][\"uuid\"];",
													"        //console.log(i_role_uuid);",
													"",
													"        if (i_role_uuid == target_role_uuid)",
													"        {",
													"            assert(!jsonArr[i][\"preset\"], \"It's not preset role\");",
													"            assert(jsonArr[i][\"role\"] == pm.environment.get(\"role_name\"))",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"report-view\"].sort().toString());",
													"            assert(jsonArr[i][\"users\"].sort().toString() == [\"info@xxxx.ai\", \"rong@xxxx.ai\"].sort().toString());",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c42801a5-2ee3-4970-b48d-f09578588d49",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": false,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "delete-preset-role",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-delete-siteadmin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "43d8ed54-f488-447f-bbdf-d35061ee4466",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    var assert = require(\"assert\");",
													"    assert(pm.response.text != \"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1eb24296-571b-492a-aad8-7b0c355e1938",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-admin\");",
													"pm.environment.set(\"role_name\", \"Site Admin\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-delete-companyadmin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f835988-6bfc-4112-95ad-8ababa0c02e6",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    var assert = require(\"assert\");",
													"    assert(pm.response.text != \"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7507a34b-f921-493e-b32a-eb19b8844622",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"company-admin\");",
													"pm.environment.set(\"role_name\", \"Company Admin\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-delete-siteoperator",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1fa323ce-ab6c-400e-809f-bc2ff891447e",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    var assert = require(\"assert\");",
													"    assert(pm.response.text != \"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "919e8621-fd23-4038-9aaa-efa14e264eff",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-operator\");",
													"pm.environment.set(\"role_name\", \"Site Operator\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-delete-applicationuser",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f0ed34c4-7000-4dcd-8eb0-876f02ac42ee",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    var assert = require(\"assert\");",
													"    assert(pm.response.text != \"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "70c09aea-a276-4efe-8f71-f4c7c76fc0ab",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"application-user\");",
													"pm.environment.set(\"role_name\", \"Application User\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e6028cfe-e905-4b99-b908-3adc18731950",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "789fded1-6290-4cd2-a0d5-99b62fcf3e90",
												"exec": [
													"pm.test(\"Find roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find roles\")",
													"});",
													"",
													"",
													"pm.test(\"Verify preset roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = 0;",
													"    const assert = require(\"assert\");",
													"    var preset_roles = [\"Site Admin\", \"Company Admin\", \"Site Operator\", \"Application User\"];",
													"    const target_role_name = pm.environment.get(\"role_name\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == \"Site Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Company Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"site-manage\", \"role-manage\", \"user-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Site Operator\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"event-review\", \"event-process\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Application User\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"dashboard-view\", \"report-view\", \"event-review\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"    };",
													"    assert(found == 4, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"action\":\"list\",\"credential\":\"{{demo_credential}}\",\"company\":\"Tridel\"}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "edit-preset-role-name-service-user",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1cb1a467-6627-4b70-a24e-9c96b32effa1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5562222f-27dc-49b7-a461-c7ff96fc44a3",
												"exec": [
													"pm.test(\"Find roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find roles\")",
													"});",
													"",
													"",
													"pm.test(\"Verify preset roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = 0;",
													"    const assert = require(\"assert\");",
													"    var preset_roles = [\"Site Admin\", \"Company Admin\", \"Site Operator\", \"Application User\"];",
													"    const target_role_name = pm.environment.get(\"role_name\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == \"Site Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Company Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"site-manage\", \"role-manage\", \"user-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Site Operator\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"event-review\", \"event-process\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Application User\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"dashboard-view\", \"report-view\", \"event-review\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"    };",
													"    assert(found == 4, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"action\":\"list\",\"credential\":\"{{demo_credential}}\",\"company\":\"Tridel\"}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-siteadmin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68d4e86a-fc3e-4a6d-9e7b-8f3f0e9ba0fc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0e923d02-3155-4cfd-8f60-3895773deefa",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-admin\");",
													"pm.environment.set(\"role_name\", \"Site Admin Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-companyadmin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9d1d6689-0143-4a9f-9530-8cd2370deb83",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a8e5efe7-9191-4dc8-b418-afdcec01d21e",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"company-admin\");",
													"pm.environment.set(\"role_name\", \"Company Admin Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-siteoperator",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "35e7650d-32b1-4109-8d96-3f0c51686cfb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "607e4b47-4ff0-4974-81f8-4d2d15275b2e",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-operator\");",
													"pm.environment.set(\"role_name\", \"Site Operator Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-applicationuser",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ba165be-f364-4f33-9495-6b68a9eb3f27",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "230ccb91-311c-4a5c-9213-387fc15b25f1",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"application-user\");",
													"pm.environment.set(\"role_name\", \"Application User Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list-after-edit",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "65533d81-2adc-4dba-8d8d-af02a06e331f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2868e044-1f4e-4f19-97d9-1aa06f023fc2",
												"exec": [
													"pm.test(\"Find roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find roles\")",
													"});",
													"",
													"",
													"pm.test(\"Verify preset roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = 0;",
													"    const assert = require(\"assert\");",
													"    var preset_roles = [\"Site Admin\", \"Company Admin\", \"Site Operator\", \"Application User\"];",
													"    const target_role_name = pm.environment.get(\"role_name\");",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == \"Site Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Company Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"site-manage\", \"role-manage\", \"user-manage\", \"resource-manage\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Site Operator\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"event-review\", \"event-process\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Application User\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"dashboard-view\", \"report-view\", \"event-review\"].sort().toString());",
													"            found = found + 1",
													"        }",
													"    };",
													"    assert(found == 4, \"Cannot find created role\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"action\":\"list\",\"credential\":\"{{demo_credential}}\",\"company\":\"Tridel\"}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-siteadmin-user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ffdd688d-783e-4ba4-8c1e-250a76f93c5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6d72b77b-47c3-4c8d-814d-5ea3a3b9f92e",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-admin\");",
													"pm.environment.set(\"role_name\", \"Site Admin Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"demo\",\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\",\n            \"yao@xxxx.ai\",\n            \"feng@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\",\n            \"david@xxxx.ai\",\n            \"linda@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-companyadmin-user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85a2bb13-bb73-4f93-9c0d-9f05eec010d2",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7997d40b-5086-45df-b65c-f08bd21170ca",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"company-admin\");",
													"pm.environment.set(\"role_name\", \"Company Admin Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"demo\",\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\",\n            \"yao@xxxx.ai\",\n            \"feng@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\",\n            \"david@xxxx.ai\",\n            \"linda@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-siteoperator-user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f9d5f2dc-f2a8-4bc3-a96e-43c6a31705ee",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d623a417-eb50-4529-9e88-4998a9c43852",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"site-operator\");",
													"pm.environment.set(\"role_name\", \"Site Operator Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"demo\",\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\",\n            \"yao@xxxx.ai\",\n            \"feng@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\",\n            \"david@xxxx.ai\",\n            \"linda@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-edit-applicationuser-user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb913665-3c7c-4bb2-aabd-650b151a48ef",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2ad09a73-4f78-4b61-beb7-ff3dec6f259a",
												"exec": [
													"pm.environment.set(\"role_uuid\", \"application-user\");",
													"pm.environment.set(\"role_name\", \"Application User Change\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"roleInfo\": {\n        \"uuid\": \"{{role_uuid}}\",\n        \"name\": \"{{role_name}}\",\n        \"role\": \"{{role_name}}\",\n        \"preset\": true,\n        \"services\": [\n            \"report-view\"\n        ],\n        \"users\": [\n            \"demo\",\n            \"eve@xxxx.ai\",\n            \"max@xxxx.ai\",\n            \"yao@xxxx.ai\",\n            \"feng@xxxx.ai\",\n            \"info@xxxx.ai\",\n            \"rong@xxxx.ai\",\n            \"david@xxxx.ai\",\n            \"linda@xxxx.ai\"\n        ],\n        \"creation\": 1597685624274\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/role-list-after-edit-user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d9ab4a88-48e8-4733-bb8d-ace90cd4fe34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c589da7e-0303-4ec7-8741-9441a4fed051",
												"exec": [
													"pm.test(\"Find roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find roles\")",
													"});",
													"",
													"",
													"pm.test(\"Verify preset roles\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var i_role_name = \"\";",
													"    var found = 0;",
													"    const assert = require(\"assert\");",
													"    var preset_roles = [\"Site Admin\", \"Company Admin\", \"Site Operator\", \"Application User\"];",
													"    const target_role_name = pm.environment.get(\"role_name\");",
													"    var users = [",
													"            \"demo\",",
													"            \"eve@xxxx.ai\",",
													"            \"max@xxxx.ai\",",
													"            \"yao@xxxx.ai\",",
													"            \"feng@xxxx.ai\",",
													"            \"info@xxxx.ai\",",
													"            \"rong@xxxx.ai\",",
													"            \"david@xxxx.ai\",",
													"            \"linda@xxxx.ai\"",
													"        ];",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_role_name = jsonArr[i][\"role\"];",
													"        console.log(i_role_name);",
													"",
													"        if (i_role_name == \"Site Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"resource-manage\"].sort().toString(), \"service list does not match\");",
													"            assert(jsonArr[i][\"users\"].sort().toString() == users.sort().toString(), \"user list does not match\");",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Company Admin\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"alert-manage\", \"site-manage\", \"role-manage\", \"user-manage\", \"resource-manage\"].sort().toString());",
													"            //console.log(jsonArr[i][\"users\"]);",
													"            assert(jsonArr[i][\"users\"].sort().toString() == users.sort().toString(), \"user list doesn't match\");",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Site Operator\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"event-review\", \"event-process\"].sort().toString());",
													"            assert(jsonArr[i][\"users\"].sort().toString() == users.sort().toString());",
													"            found = found + 1",
													"        }",
													"",
													"        if (i_role_name == \"Application User\")",
													"        {",
													"            assert(jsonArr[i][\"preset\"], \"It's preset role\");",
													"            assert(jsonArr[i][\"services\"].sort().toString() == [\"dashboard-view\", \"report-view\", \"event-review\"].sort().toString());",
													"            assert(jsonArr[i][\"users\"].sort().toString() == users.sort().toString());",
													"            found = found + 1",
													"        }",
													"    };",
													"    assert(found == 4, \"Preset info doesn't match\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"action\":\"list\",\"credential\":\"{{demo_credential}}\",\"company\":\"Tridel\"}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/role",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"role"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "UserManage",
					"item": [
						{
							"name": "create-list-edit-delete",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "51ca3eff-13b7-4eb6-8f3a-91eac07847a6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "bc111964-d3c9-4878-957a-20d14c5b43ca",
												"exec": [
													"pm.test(\"Find users\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find users\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a6ad8004-848b-4770-9d59-f98e90fb8a23",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    jsoninfo = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsoninfo[\"username\"] == pm.environment.get(\"user_name\"), \"Fail to create user\")",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ba417604-5459-4316-a515-e005c886ed90",
												"exec": [
													"pm.environment.set(\"user_name\", \"test33@xxxx.ai\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"title\": \"Create User\",\n        \"type\": \"create\",\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"\",\n        \"sites\": [\n            \"any\",\n            \"198a87d26758fea\",\n            \"87cd1a1d-cdbb-4ab1-a694-51a5b3b7a8ad\"\n        ],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"isAnySite\": false,\n        \"isCompanyAdmin\": false,\n        \"active\": true\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list-after-create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a678e56-6f98-4ba1-bf65-e30617a914ce",
												"exec": [
													"",
													"pm.test(\"Find user and verify info\", function () {",
													"    var jsonArr = pm.response.json();",
													"    var i_user_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_user_name = pm.environment.get(\"user_name\");",
													"    console.log(target_user_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_user_name = jsonArr[i][\"username\"];",
													"        //console.log(i_user_name);",
													"",
													"        if (i_user_name == target_user_name)",
													"        {",
													"            assert(jsonArr[i][\"displayName\"] == target_user_name, \"displayName doesn't match\");",
													"            assert(jsonArr[i][\"sites\"].sort().toString() == [\"any\"].sort().toString());",
													"            assert(jsonArr[i][\"roles\"].sort().toString() == [\"site-admin\", \"application-user\"].sort().toString())",
													"            assert(jsonArr[i][\"active\"], \"Should be active\");",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created user\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb4c4710-de0f-4a95-991d-b152b030c5db",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"title\": \"Edit User\",\n        \"type\": \"edit\",\n        \"index\": 16,\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"\",\n        \"sites\": [\n            \"f80ebdfd-b89c-480d-9f09-ebc8d8db99a7\",\n            \"b6db61db-6e5a-4672-8972-d618169a1841\"\n        ],\n        \"roles\": [\n            \"company-admin\",\n            \"cbba1da9-430f-4685-a70f-8f6bf773d9a9\"\n        ],\n        \"creation\": 1597685904467,\n        \"isAnySite\": true,\n        \"isCompanyAdmin\": false,\n        \"active\": true\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list-after-edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97bd43d6-7ef5-48f6-93a8-63a26a9f58c6",
												"exec": [
													"",
													"pm.test(\"Find user and verify info\", function () {",
													"    var jsonArr = pm.response.json();",
													"    var i_user_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_user_name = pm.environment.get(\"user_name\");",
													"    console.log(target_user_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_user_name = jsonArr[i][\"username\"];",
													"        //console.log(i_user_name);",
													"",
													"        if (i_user_name == target_user_name)",
													"        {",
													"            assert(jsonArr[i][\"displayName\"] == target_user_name, \"displayName doesn't match\");",
													"            assert(jsonArr[i][\"sites\"].sort().toString() == [\"any\"].sort().toString());",
													"            assert(jsonArr[i][\"roles\"].sort().toString() == [\"company-admin\", \"cbba1da9-430f-4685-a70f-8f6bf773d9a9\"].sort().toString())",
													"            assert(jsonArr[i][\"active\"], \"Should be active\");",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find edited user\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043ac495-dbec-4486-ad58-4a23b6fbad20",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"{{user_name}}\",\n        \"givenName\": \"{{user_name}}\",\n        \"surname\": \"{{user_name}}\",\n        \"company\": \"Tridel\",\n        \"description\": [],\n        \"sites\": [],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"labels\": [],\n        \"active\": true,\n        \"title\": \"Create User\",\n        \"creation\": 1597685904467\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-existing-admin",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a2c45ca7-d7a1-4f4d-8ebc-56582a8f369f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "fbd7bf3d-a4e7-4f89-b959-93fcbe9e09ed",
												"exec": [
													"pm.test(\"Find users\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find users\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af0f6a40-28ae-4c26-9599-fd9c41b07661",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    jsoninfo = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsoninfo[\"username\"] == pm.environment.get(\"user_name\"), \"Fail to create user\")",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "619309f4-97e8-4e3d-b9cf-405528a3ea48",
												"exec": [
													"pm.environment.set(\"user_name\", \"info@xxxx.ai\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"title\": \"Create User\",\n        \"type\": \"create\",\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"\",\n        \"sites\": [\n            \"any\",\n            \"198a87d26758fea\",\n            \"87cd1a1d-cdbb-4ab1-a694-51a5b3b7a8ad\"\n        ],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"isAnySite\": false,\n        \"isCompanyAdmin\": false,\n        \"active\": true\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list-after-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "32e7422c-0335-4d4b-a1ae-79090f6e5b75",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dce2faf6-75e7-467f-b69d-9cd7dc190d42",
												"exec": [
													"",
													"pm.test(\"Find user and verify info\", function () {",
													"    var jsonArr = pm.response.json();",
													"    var i_user_name = \"\";",
													"    var assert = require(\"assert\");",
													"    found = false;",
													"    const target_user_name = pm.environment.get(\"user_name\");",
													"    console.log(target_user_name);",
													"    for(var i = 0, len = jsonArr.length; i < len; i++){",
													"        i_user_name = jsonArr[i][\"username\"];",
													"        //console.log(i_user_name);",
													"",
													"        if (i_user_name == target_user_name)",
													"        {",
													"            assert(jsonArr[i][\"displayName\"] == target_user_name, \"displayName doesn't match\");",
													"            assert(jsonArr[i][\"sites\"].sort().toString() == [\"any\"].sort().toString());",
													"            assert(jsonArr[i][\"roles\"].sort().toString() == [\"site-admin\", \"application-user\"].sort().toString())",
													"            assert(jsonArr[i][\"active\"], \"Should be active\");",
													"            found = true;",
													"        }",
													"    };",
													"    assert(found, \"cannot find created user\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "786ba02f-fac5-4484-ba15-0d0e9160c4bb",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"{{user_name}}\",\n        \"givenName\": \"{{user_name}}\",\n        \"surname\": \"{{user_name}}\",\n        \"company\": \"Tridel\",\n        \"description\": [],\n        \"sites\": [],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"labels\": [],\n        \"active\": true,\n        \"title\": \"Create User\",\n        \"creation\": 1597685904467\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "create-existing-user",
							"item": [
								{
									"name": "http://xxxx.xxxx.ai:15070/api/switch-xxxxai",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"credential\": \"{{demo_credential}}\",\n    \"companyId\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\"\n}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/switch",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"switch"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e83beaa3-1af1-47e5-8c65-65452bec53e3",
												"exec": [
													"pm.test(\"Find users\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find users\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\"\n}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/user",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6657a9d9-45c0-47f6-b9c5-12b1e6795662",
												"exec": [
													"pm.environment.set(\"user_name\", \"test33@xxxx.ai\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f8a03897-d89c-4808-9d49-25cf25f3c8d2",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    jsoninfo = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsoninfo[\"username\"] == pm.environment.get(\"user_name\"), \"Fail to create user\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\",\n    \"userInfo\": {\n        \"title\": \"Create User\",\n        \"type\": \"create\",\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"\",\n        \"sites\": [\n            \"6f51d9ca-b2c7-41e5-8df3-f5509d358683\"\n        ],\n        \"roles\": [\n            \"site-admin\"\n        ],\n        \"isAnySite\": false,\n        \"isCompanyAdmin\": false,\n        \"active\": true\n    }\n}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/user",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/switch-ioticiti",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"credential\":\"7b22757365726e616d65223a2264656d6f222c2270617373776f7264223a2234323136613736363065363730306265222c226e6f6e6365223a223964623335316262366439373731613465666361633636323035636265633133222c2261757468546167223a223038646530316631313138363065313365663164633639373532653764393636227d\",\"companyId\":\"Tridel\"}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/switch",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"switch"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-list",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b01bda66-5fb6-4e87-90b5-3a6f21752dec",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a9977830-b31d-4baa-89f3-42dec2bcbd6f",
												"exec": [
													"pm.test(\"Find users\", function () {",
													"    var jsonData = pm.response.json();",
													"    var jsonStr = JSON.stringify(jsonData);",
													"    var jsonArr = JSON.parse(jsonStr);",
													"    var assert = require(\"assert\");",
													"    assert(jsonArr.length > 0, \"Cannot find users\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"list\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\"\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be34b0b2-40cf-4f9c-8511-0b4e8d7589b2",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    jsoninfo = pm.response.json();",
													"    var assert = require(\"assert\");",
													"    assert(jsoninfo[\"username\"] == pm.environment.get(\"user_name\"), \"Fail to create user\")",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "db795e52-4705-40f7-bb69-b2af76b51a58",
												"exec": [
													"pm.environment.set(\"user_name\", \"test33@xxxx.ai\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"create\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"title\": \"Create User\",\n        \"type\": \"create\",\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"\",\n        \"sites\": [\n            \"any\",\n            \"198a87d26758fea\",\n            \"87cd1a1d-cdbb-4ab1-a694-51a5b3b7a8ad\"\n        ],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"isAnySite\": false,\n        \"isCompanyAdmin\": false,\n        \"active\": true\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d8fe7d83-bd09-4557-a0dd-476891b39bc7",
												"exec": [
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Success\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"Tridel\",\n    \"userInfo\": {\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"{{user_name}}\",\n        \"givenName\": \"{{user_name}}\",\n        \"surname\": \"{{user_name}}\",\n        \"company\": \"Tridel\",\n        \"description\": [],\n        \"sites\": [],\n        \"roles\": [\n            \"site-admin\",\n            \"application-user\"\n        ],\n        \"labels\": [],\n        \"active\": true,\n        \"title\": \"Create User\",\n        \"creation\": 1597685904467\n    }\n}"
										},
										"url": {
											"raw": "{{api_home_url}}/api/user",
											"host": [
												"{{api_home_url}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/switch-xxxxai",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"credential\": \"{{demo_credential}}\",\n    \"companyId\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\"\n}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/switch",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"switch"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/user-delete",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"action\": \"delete\",\n    \"credential\": \"{{demo_credential}}\",\n    \"company\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\",\n    \"userInfo\": {\n        \"username\": \"{{user_name}}\",\n        \"displayName\": \"{{user_name}}\",\n        \"givenName\": \"{{user_name}}\",\n        \"surname\": \"{{user_name}}\",\n        \"company\": \"27c0eca2-5b67-4ee9-a080-6b55f9e4fed9\",\n        \"description\": [],\n        \"sites\": [\n            \"6f51d9ca-b2c7-41e5-8df3-f5509d358683\"\n        ],\n        \"roles\": [\n            \"site-admin\"\n        ],\n        \"labels\": [],\n        \"active\": true,\n        \"title\": \"Create User\",\n        \"creation\": 1598640199568\n    }\n}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/user",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "http://xxxx.xxxx.ai:15070/api/switch-ioticiti",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"credential\":\"7b22757365726e616d65223a2264656d6f222c2270617373776f7264223a2234323136613736363065363730306265222c226e6f6e6365223a223964623335316262366439373731613465666361633636323035636265633133222c2261757468546167223a223038646530316631313138363065313365663164633639373532653764393636227d\",\"companyId\":\"Tridel\"}"
										},
										"url": {
											"raw": "http://xxxx.xxxx.ai:15070/api/switch",
											"protocol": "http",
											"host": [
												"xxxx",
												"xxxx",
												"ai"
											],
											"port": "15070",
											"path": [
												"api",
												"switch"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Profile&Login",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-aws",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5e702b0-f330-43dc-9156-86ab03685378",
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(200);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/logout",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]"
								},
								"url": {
									"raw": "{{api_home_url}}/api/logout",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ChangeProfile",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-edit-profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43076266-392a-4f78-af5d-b3cb0d44b034",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"userInfo\": {\n        \"username\": \"aws@xxxx.ai\",\n        \"avatar\": \"{{avartar_001}}\",\n        \"displayName\": \"aws\",\n        \"mobile\": \"123456777\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-get-profile-after-edit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3824a292-4590-45af-8587-26f38e2e9408",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"    assert(jsonDict[\"displayName\"] == \"aws\");",
											"    assert(jsonDict[\"avatar\"] == pm.environment.get(\"avartar_001\"))",
											"    assert(jsonDict[\"mobile\"] == \"123456777\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list-user\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"username\": \"aws@xxxx.ai\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-edit-profile-back",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e8bd12f-5e37-4f5c-9072-8e68d1f747ec",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"userInfo\": {\n        \"username\": \"aws@xxxx.ai\",\n        \"avatar\": \"{{avartar_002}}\",\n        \"displayName\": \"aws@xxxx.ai\",\n        \"mobile\": \"123456999\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-get-profile-after-edit-back",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "545a0201-be6e-46c9-8fc7-bd7ddc0239f9",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"    assert(jsonDict[\"displayName\"] == \"aws@xxxx.ai\");",
											"    assert(jsonDict[\"avatar\"] == pm.environment.get(\"avartar_002\"))",
											"    assert(jsonDict[\"mobile\"] == \"123456999\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list-user\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"username\": \"aws@xxxx.ai\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ChangePassword",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-aws",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6058db5-c02b-42cf-a2c5-79453f7199b3",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-get-profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59f7310b-7013-49d0-b3a9-f4f4c18aa5dd",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"list-user\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"username\": \"aws@xxxx.ai\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-edit-password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1daee3d7-5f57-4d3d-91af-c04d015ef58a",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit-password\",\n    \"credential\": \"{{aws_credential}}\",\n    \"company\": \"{{Btestcompany002_uuid}}\",\n    \"userInfo\": {\n        \"username\": \"aws@xxxx.ai\",\n        \"oldPassword\": \"7b22757365726e616d65223a22617773406c7563692e6169222c2270617373776f7264223a22306237393964303039313237623266373631626461323637222c226e6f6e6365223a226637316531366463363338333530303764633932333436356535646536643138222c2261757468546167223a226663393531623432363038643261613936343837363366623537376266303462227d\",\n        \"newPassword\": \"7b22757365726e616d65223a22617773406c7563692e6169222c2270617373776f7264223a22383235346463323462326238333162346166343431326264222c226e6f6e6365223a223933653433333564663537633063633937623232666461373839343764626561222c2261757468546167223a226336363835373731353934326362376664623762623866653535333932646638227d\"\n    }\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-aws-change",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "809c2cea-62a6-46b7-bf56-63326baf0d2c",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential_change}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-edit-password-back",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28075714-a43c-4e7c-97ac-24bfa06cf20a",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body(\"Success\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"edit-password\",\n    \"credential\": \"{{aws_credential_change}}\",\n    \"company\": \"{{Btestcompany002_uuid}}}\",\n    \"userInfo\": {\n        \"username\": \"aws@xxxx.ai\",\n        \"oldPassword\": \"7b22757365726e616d65223a22617773406c7563692e6169222c2270617373776f7264223a22333938333839626365636536316664326635343135306561222c226e6f6e6365223a223062346538656539376133656332386365363336623533363635343636396566222c2261757468546167223a223134333039356366306161323166356635376666616338303932393038393234227d\",\n        \"newPassword\": \"7b22757365726e616d65223a22617773406c7563692e6169222c2270617373776f7264223a22383361336362313034326566383063656635373031323834222c226e6f6e6365223a223335346663613262623830366631353065363039366339386333666532666238222c2261757468546167223a226665366439633533343063633238326466353430623366356165336365356666227d\"\n    }\n}"
								},
								"url": {
									"raw": "http://xxxx.xxxx.ai:15070/api/user",
									"protocol": "http",
									"host": [
										"xxxx",
										"xxxx",
										"ai"
									],
									"port": "15070",
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-aws",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f218c67-0c3e-4960-b8a6-6687aaf422da",
										"exec": [
											"",
											"pm.test(\"Body is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    var jsonStr = JSON.stringify(jsonData);",
											"    var jsonDict = JSON.parse(jsonStr);",
											"    var assert = require(\"assert\");",
											"    assert(jsonDict[\"username\"] == \"aws@xxxx.ai\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ResetPassword",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/send-reset-link",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test2@xxxx.ai\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/send_reset_link",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"send_reset_link"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/user-reset-password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"forgot-password\",\n    \"token\": \"00ec0a30-c5ee-49b4-8853-e0cabfd377d4\",\n    \"newpwd\": \"UmFwdG9yc0AyMDIy\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/user",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{test2_credential_Raptors@2022}}\"\n}"
								},
								"url": {
									"raw": "http://xxxx.xxxx.ai:15070/api/login",
									"protocol": "http",
									"host": [
										"xxxx",
										"xxxx",
										"ai"
									],
									"port": "15070",
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "ResetPassword-invalid-user",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/send-reset-link",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "089604b6-1a59-4cb6-bc57-af67d5205936",
										"exec": [
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.body('{\"error\":\"The email is not registered.\"}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"notuser@xxxx.ai\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/send_reset_link",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"send_reset_link"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "SwitchCompany",
					"item": [
						{
							"name": "http://xxxx.xxxx.ai:15070/api/login-aws",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential}}\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/login",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/switch-company-aws",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64752ee4-fced-4d99-b173-c1e698cd1318",
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(!pm.response.text()).to.include(\"error\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": \"{{aws_credential}}\",\n    \"companyId\": \"eaa6b21e-110d-4883-93cb-f9871255c4d5\"\n}"
								},
								"url": {
									"raw": "{{api_home_url}}/api/switch",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"switch"
									]
								}
							},
							"response": []
						},
						{
							"name": "http://xxxx.xxxx.ai:15070/api/logout-aws",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[]"
								},
								"url": {
									"raw": "{{api_home_url}}/api/logout",
									"host": [
										"{{api_home_url}}"
									],
									"path": [
										"api",
										"logout"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}